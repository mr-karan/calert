apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "calert.fullname" . }}
  labels:
{{ include "calert.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "calert.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        # https://helm.sh/docs/howto/charts_tips_and_tricks/#automatically-roll-deployments
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "calert.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.priorityClassName }}
      priorityClassName: {{ . }}
    {{- end }}
    {{- if .Values.securityContext.enabled }}
      {{- with omit .Values.securityContext "enabled" }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            {{- range .Values.args }}
            - {{ . | quote }}
            {{- end }}
        {{- if .Values.securityContext.enabled }}
          {{- with omit .Values.securityContext "enabled" "runAsGroup" "runAsUser" "runAsNonRoot" "windowsOptions" }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- end }}
          ports:
          - containerPort: {{ .Values.service.port }}
            protocol: TCP
          volumeMounts:
          - name: config-dir
            mountPath: /app/config.toml
            subPath: config.toml
          {{- range $filename, $_ := .Values.templates }}
          - name: config-dir
            mountPath: /app/static/{{ $filename }}
            subPath: {{ $filename }}
          {{- end }}
          livenessProbe:
            httpGet:
              httpHeaders:
              - name: X-Causation-ID
                value: kube-health
              path: "/ping"
              port: {{ .Values.service.port }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          readinessProbe:
            httpGet:
              httpHeaders:
              - name: X-Causation-ID
                value: kube-health
              path: "/ping"
              port: {{ .Values.service.port }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          startupProbe:
            httpGet:
              httpHeaders:
              - name: X-Causation-ID
                value: kube-health
              path: "/ping"
              port: {{ .Values.service.port }}
            initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.startupProbe.timeoutSeconds }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: config-dir
          configMap:
            name: {{ template "calert.fullname" . }}-config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
